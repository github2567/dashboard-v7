{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class UserContentComponent {\n  filterMedia(filterTxt) {\n    // const emitObj: any = new Medias('','','','','','');\n    // this.mediaItemAddEvent.emit(emitObj);\n    this.mediaItemAddEvent.emit(filterTxt);\n  }\n  constructor() {\n    this.title = \"\";\n    // @Input() employeeList: any;\n    this.employeeList = new Array();\n    this.mediaList = new Array();\n    // @Input() mediaList: any;\n    this.test1 = \"\";\n    this.medias = [];\n    this.filterTxt = \"\";\n    this.mediaItemAddEvent = new EventEmitter();\n    // this.medias = this.mediaList;\n  }\n}\n\nUserContentComponent.ɵfac = function UserContentComponent_Factory(t) {\n  return new (t || UserContentComponent)();\n};\nUserContentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserContentComponent,\n  selectors: [[\"app-usercontent\"]],\n  inputs: {\n    title: \"title\",\n    GridHeaderList: \"GridHeaderList\",\n    employeeList: \"employeeList\",\n    mediaList: \"mediaList\",\n    test1: \"test1\"\n  },\n  outputs: {\n    mediaItemAddEvent: \"mediaItemAddEvent\"\n  },\n  decls: 1,\n  vars: 3,\n  consts: [[\"title\", \"Medias\", 3, \"test1\", \"mediaList\", \"GridHeaderList\", \"mediaItemAddEvent\"]],\n  template: function UserContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-usercontent\", 0);\n      i0.ɵɵlistener(\"mediaItemAddEvent\", function UserContentComponent_Template_app_usercontent_mediaItemAddEvent_0_listener($event) {\n        return ctx.filterMedia($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate(\"test1\", ctx.test1);\n      i0.ɵɵproperty(\"mediaList\", ctx.mediaList)(\"GridHeaderList\", ctx.GridHeaderList);\n    }\n  },\n  dependencies: [UserContentComponent],\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","UserContentComponent","filterMedia","filterTxt","mediaItemAddEvent","emit","constructor","title","employeeList","Array","mediaList","test1","medias","selectors","inputs","GridHeaderList","outputs","decls","vars","consts","template","UserContentComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","UserContentComponent_Template_app_usercontent_mediaItemAddEvent_0_listener","$event","ɵɵelementEnd","ɵɵpropertyInterpolate","ɵɵproperty","encapsulation"],"sources":["C:\\WorkSpace\\AngularProject\\angular-dashboards-main\\dashboard-v7\\src\\app\\components\\content\\usercontent.component.ts","C:\\WorkSpace\\AngularProject\\angular-dashboards-main\\dashboard-v7\\src\\app\\components\\content\\usercontent.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Employees, Medias } from 'src/app/gridcontent';\r\n\r\n@Component({\r\n  selector: 'app-usercontent',\r\n  templateUrl: './usercontent.component.html'\r\n})\r\n\r\nexport class UserContentComponent {\r\n\r\n  @Input() title: string = \"\";\r\n  @Input() GridHeaderList: any;\r\n  // @Input() employeeList: any;\r\n  @Input() employeeList = new Array();\r\n  @Input() mediaList = new Array();\r\n  // @Input() mediaList: any;\r\n  @Input() test1: string = \"\";\r\n\r\n  medias: any = [];\r\n  filterTxt: string = \"\";\r\n\r\n  @Output() mediaItemAddEvent = new EventEmitter<any>();\r\n  filterMedia(filterTxt: string) {\r\n      // const emitObj: any = new Medias('','','','','','');\r\n      // this.mediaItemAddEvent.emit(emitObj);\r\n      this.mediaItemAddEvent.emit(filterTxt);\r\n  }\r\n\r\n  constructor() {\r\n    // this.medias = this.mediaList;\r\n  }\r\n\r\n  // onFilter(){\r\n  //   // this.medias = this.mediaList;\r\n  //   // this.medias = this.medias.filter((media: { Id: string; }) => media.Id === this.filterTxt)\r\n  // }\r\n  \r\n}\r\n","<app-usercontent title=\"Medias\" test1={{test1}} [mediaList]=\"mediaList\" [GridHeaderList]=\"GridHeaderList\" (mediaItemAddEvent)=\"filterMedia($event)\"></app-usercontent>\r\n\r\n"],"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;;AAStE,OAAM,MAAOC,oBAAoB;EAc/BC,WAAWA,CAACC,SAAiB;IACzB;IACA;IACA,IAAI,CAACC,iBAAiB,CAACC,IAAI,CAACF,SAAS,CAAC;EAC1C;EAEAG,YAAA;IAlBS,KAAAC,KAAK,GAAW,EAAE;IAE3B;IACS,KAAAC,YAAY,GAAG,IAAIC,KAAK,EAAE;IAC1B,KAAAC,SAAS,GAAG,IAAID,KAAK,EAAE;IAChC;IACS,KAAAE,KAAK,GAAW,EAAE;IAE3B,KAAAC,MAAM,GAAQ,EAAE;IAChB,KAAAT,SAAS,GAAW,EAAE;IAEZ,KAAAC,iBAAiB,GAAG,IAAIJ,YAAY,EAAO;IAQnD;EACF;;;AAtBWC,oBAAoB,C;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB,C;QAApBA,oBAAoB;EAAAY,SAAA;EAAAC,MAAA;IAAAP,KAAA;IAAAQ,cAAA;IAAAP,YAAA;IAAAE,SAAA;IAAAC,KAAA;EAAA;EAAAK,OAAA;IAAAZ,iBAAA;EAAA;EAAAa,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjCE,EAAA,CAAAC,cAAA,yBAAoJ;MAA1CD,EAAA,CAAAE,UAAA,+BAAAC,2EAAAC,MAAA;QAAA,OAAqBL,GAAA,CAAArB,WAAA,CAAA0B,MAAA,CAAmB;MAAA,EAAC;MAACJ,EAAA,CAAAK,YAAA,EAAkB;;;MAAtIL,EAAA,CAAAM,qBAAA,UAAAP,GAAA,CAAAZ,KAAA,CAAe;MAACa,EAAA,CAAAO,UAAA,cAAAR,GAAA,CAAAb,SAAA,CAAuB,mBAAAa,GAAA,CAAAR,cAAA;;;iBDS1Dd,oBAAoB;EAAA+B,aAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}