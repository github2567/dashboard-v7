{"ast":null,"code":"import { inject } from '@angular/core';\nimport { MediaService } from 'src/app/services/media.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../components/content/content.component\";\nexport class MediaComponent {\n  // tempList: any = [];\n  constructor(http) {\n    this.http = http;\n    this.mediaService = inject(MediaService);\n    this.GridHeaderList = [{\n      Column1: '',\n      Column2: '',\n      Column3: '',\n      Column4: '',\n      Column5: ''\n    }];\n    this.mediaList = [];\n    // mediaList = new Array();\n    this.test1 = \"\";\n  }\n  ngOnInit() {\n    this.getMedia();\n  }\n  getMedia() {\n    this.GridHeaderList = [{\n      Column1: 'Name',\n      Column2: 'Type',\n      Column3: 'Location',\n      Column4: 'Phone',\n      Column5: ''\n    }];\n    // this.http.get('http://localhost:9000/media').subscribe(data=>{\n    //   this.mediaList = data;\n    //   // this.tempList = data;\n    // });\n    // this.mediaList = this.mediaService.getAllMedia();\n  }\n\n  filterMedia(filterTxt) {\n    // this.mediaList = this.tempList.filter((media: { Id: string; }) => media.Id === filterTxt)\n    this.mediaList = this.mediaService.getAllMedia();\n  }\n}\nMediaComponent.ɵfac = function MediaComponent_Factory(t) {\n  return new (t || MediaComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nMediaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MediaComponent,\n  selectors: [[\"app-media\"]],\n  decls: 1,\n  vars: 3,\n  consts: [[\"title\", \"Medias\", 3, \"test1\", \"mediaList\", \"GridHeaderList\", \"mediaItemAddEvent\"]],\n  template: function MediaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-content\", 0);\n      i0.ɵɵlistener(\"mediaItemAddEvent\", function MediaComponent_Template_app_content_mediaItemAddEvent_0_listener($event) {\n        return ctx.filterMedia($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵpropertyInterpolate(\"test1\", ctx.test1);\n      i0.ɵɵproperty(\"mediaList\", ctx.mediaList)(\"GridHeaderList\", ctx.GridHeaderList);\n    }\n  },\n  dependencies: [i2.ContentComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["inject","MediaService","MediaComponent","constructor","http","mediaService","GridHeaderList","Column1","Column2","Column3","Column4","Column5","mediaList","test1","ngOnInit","getMedia","filterMedia","filterTxt","getAllMedia","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","MediaComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","MediaComponent_Template_app_content_mediaItemAddEvent_0_listener","$event","ɵɵelementEnd","ɵɵpropertyInterpolate","ɵɵproperty"],"sources":["C:\\WorkSpace\\AngularProject\\angular-dashboards-main\\dashboard-v7\\src\\app\\pages\\media\\media.component.ts","C:\\WorkSpace\\AngularProject\\angular-dashboards-main\\dashboard-v7\\src\\app\\pages\\media\\media.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Medias } from 'src/app/gridcontent';\nimport { Title } from '@angular/platform-browser';\n\nimport { MediaService } from 'src/app/services/media.service';\n\n@Component({\n  selector: 'app-media',\n  templateUrl: './media.component.html',\n  styleUrls: ['./media.component.css']\n})\n\nexport class MediaComponent implements OnInit  {\n\n  mediaService: MediaService = inject(MediaService);\n\n  GridHeaderList = [\n    { Column1: '', Column2: '', Column3: '', Column4: '', Column5: '' }\n  ];\n\n  mediaList: any = [];\n  // mediaList = new Array();\n  test1: string = \"\";\n  // tempList: any = [];\n\n  constructor(private http : HttpClient) {\n\n  }\n\n  ngOnInit(): void {\n    this.getMedia();\n  }\n\n  getMedia() {\n    this.GridHeaderList = [\n      { Column1: 'Name', Column2: 'Type', Column3: 'Location', Column4: 'Phone', Column5: '' }\n    ];\n\n    // this.http.get('http://localhost:9000/media').subscribe(data=>{\n    //   this.mediaList = data;\n    //   // this.tempList = data;\n    // });\n\n    // this.mediaList = this.mediaService.getAllMedia();\n  }\n\n  filterMedia(filterTxt: string) {\n    // this.mediaList = this.tempList.filter((media: { Id: string; }) => media.Id === filterTxt)\n    this.mediaList = this.mediaService.getAllMedia();\n  }\n}\n","<!-- <app-content title=\"Medias\"> </app-content> -->\r\n<app-content title=\"Medias\" test1={{test1}} [mediaList]=\"mediaList\" [GridHeaderList]=\"GridHeaderList\" (mediaItemAddEvent)=\"filterMedia($event)\"> </app-content>\r\n<!-- <app-content title=\"Medias\" test1={{test1}} [mediaList]=\"mediaList\" [GridHeaderList]=\"GridHeaderList\"> </app-content> -->\r\n"],"mappings":"AAAA,SAA4BA,MAAM,QAAQ,eAAe;AAQzD,SAASC,YAAY,QAAQ,gCAAgC;;;;AAQ7D,OAAM,MAAOC,cAAc;EAWzB;EAEAC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAXxB,KAAAC,YAAY,GAAiBL,MAAM,CAACC,YAAY,CAAC;IAEjD,KAAAK,cAAc,GAAG,CACf;MAAEC,OAAO,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE,CACpE;IAED,KAAAC,SAAS,GAAQ,EAAE;IACnB;IACA,KAAAC,KAAK,GAAW,EAAE;EAKlB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN,IAAI,CAACT,cAAc,GAAG,CACpB;MAAEC,OAAO,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,OAAO,EAAE,UAAU;MAAEC,OAAO,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAE,CAAE,CACzF;IAED;IACA;IACA;IACA;IAEA;EACF;;EAEAK,WAAWA,CAACC,SAAiB;IAC3B;IACA,IAAI,CAACL,SAAS,GAAG,IAAI,CAACP,YAAY,CAACa,WAAW,EAAE;EAClD;;AArCWhB,cAAc,C;mBAAdA,cAAc,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdpB,cAAc,C;QAAdA,cAAc;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCf3BV,EAAA,CAAAY,cAAA,qBAAgJ;MAA1CZ,EAAA,CAAAa,UAAA,+BAAAC,iEAAAC,MAAA;QAAA,OAAqBJ,GAAA,CAAAd,WAAA,CAAAkB,MAAA,CAAmB;MAAA,EAAC;MAAEf,EAAA,CAAAgB,YAAA,EAAc;;;MAAnIhB,EAAA,CAAAiB,qBAAA,UAAAN,GAAA,CAAAjB,KAAA,CAAe;MAACM,EAAA,CAAAkB,UAAA,cAAAP,GAAA,CAAAlB,SAAA,CAAuB,mBAAAkB,GAAA,CAAAxB,cAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}